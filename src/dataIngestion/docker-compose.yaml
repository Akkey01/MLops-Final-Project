version: "3.7"

volumes:
  whisper_model: {}
  extracted_audio: {}
  text_files: {}
  postgres_db: {}
services:
  whisper-setup:
    build:
      context: .
      dockerfile: whisperModelDownloader.Dockerfile
    volumes:
      - whisper_model:/root/.cache/whisper
    command: >
      sh -c "python3 -c 'import whisper; whisper.load_model(\"large\")'"

  multimedia-handler:
    build:
      context: .
      dockerfile: multimediaHandler.Dockerfile
    volumes:
      - whisper_model:/root/.cache/whisper
      - extracted_audio:/data/audio/files
      - text_files:/data/files
    depends_on:
      - whisper-setup

  backend:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db:/var/lib/postgresql/data

  redis:
    image: redis:latest

  airflow-webserver:
    image: apache/airflow:2.7.3
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8000
    volumes:
      - ./dags:/opt/airflow/dags         # Your DAGs go here
      - ../backend:/app/backend           # Mount your project code
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.7.3
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8000
    volumes:
      - ./dags:/opt/airflow/dags
      - ../backend:/app/backend
    command: scheduler

  airflow-init:
    image: apache/airflow:2.7.3
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./dags:/opt/airflow/dags
      - ../backend:/app/backend
    command: db init
